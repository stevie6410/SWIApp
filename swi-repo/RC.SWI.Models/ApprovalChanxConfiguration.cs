// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RC.SWI.Entities
{

    // ApprovalChanges
    public partial class ApprovalChanxConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ApprovalChanx>
    {
        public ApprovalChanxConfiguration()
            : this("dbo")
        {
        }

        public ApprovalChanxConfiguration(string schema)
        {
            ToTable("ApprovalChanges", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ApprovalRequestId).HasColumnName(@"ApprovalRequestId").HasColumnType("int").IsOptional();
            Property(x => x.ApprovalActionId).HasColumnName(@"ApprovalActionId").HasColumnType("int").IsOptional();
            Property(x => x.ChangedBy).HasColumnName(@"ChangedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.ChangedOn).HasColumnName(@"ChangedOn").HasColumnType("datetime2").IsRequired();
            Property(x => x.ChangeNotes).HasColumnName(@"ChangeNotes").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);

            // Foreign keys
            HasOptional(a => a.ApprovalAction).WithMany(b => b.ApprovalChanges).HasForeignKey(c => c.ApprovalActionId).WillCascadeOnDelete(false); // FK_ApprovalChanges_ApprovalAction_ApprovalChanges
            HasOptional(a => a.ApprovalRequest).WithMany(b => b.ApprovalChanges).HasForeignKey(c => c.ApprovalRequestId).WillCascadeOnDelete(false); // FK_ApprovalChanges_ApprovalRequest_ApprovalChanges
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
