// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RC.SWI.Entities
{

    // SWIMasterSitePermissions
    public partial class SWIMasterSitePermission
    {
        public System.Guid Id { get; set; } // Id (Primary key)
        public System.Guid SWIMasterId { get; set; } // SWIMasterId
        public int SiteId { get; set; } // SiteId
        public string GrantedBy { get; set; } // GrantedBy (length: 100)
        public System.DateTime GrantedOn { get; set; } // GrantedOn
        public bool IsOwner { get; set; } // IsOwner
        public string Notes { get; set; } // Notes (length: 255)
        public bool CanRead { get; set; } // CanRead
        public bool CanAuthor { get; set; } // CanAuthor
        public bool CanManage { get; set; } // CanManage

        // Foreign keys

        /// <summary>
        /// Parent Site pointed by [SWIMasterSitePermissions].([SiteId]) (FK_SWIMasterSitePermissions_Sites)
        /// </summary>
        public virtual Site Site { get; set; } // FK_SWIMasterSitePermissions_Sites
        /// <summary>
        /// Parent SWIMaster pointed by [SWIMasterSitePermissions].([SWIMasterId]) (FK_SWIMasterSitePermissions_SWIMasters)
        /// </summary>
        public virtual SWIMaster SWIMaster { get; set; } // FK_SWIMasterSitePermissions_SWIMasters

        public SWIMasterSitePermission()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
