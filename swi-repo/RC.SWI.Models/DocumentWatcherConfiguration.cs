// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RC.SWI.Entities
{

    // DocumentWatchers
    public partial class DocumentWatcherConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DocumentWatcher>
    {
        public DocumentWatcherConfiguration()
            : this("dbo")
        {
        }

        public DocumentWatcherConfiguration(string schema)
        {
            ToTable("DocumentWatchers", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DocumentId).HasColumnName(@"DocumentId").HasColumnType("int").IsRequired();
            Property(x => x.Username).HasColumnName(@"Username").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.ClientId).HasColumnName(@"ClientId").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.Notes).HasColumnName(@"Notes").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            Property(x => x.Active).HasColumnName(@"Active").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasRequired(a => a.Document).WithMany(b => b.DocumentWatchers).HasForeignKey(c => c.DocumentId).WillCascadeOnDelete(false); // FK_DocumentWatchers_Documents
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
